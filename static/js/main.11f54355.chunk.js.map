{"version":3,"sources":["components/Genre.js","assets/left_c.jpg","assets/right_c.jpg","components/Genres.js","components/Navigation.js","assets/theather.jpg","routes/Home.js","routes/Detail.js","components/Movie.js","assets/loading.gif","routes/MovieList.js","components/App.js","apollo.js","index.js"],"names":["Container","styled","div","Genre","props","to","genreName","LeftCurtain","left_c","RightCurtain","right_c","fadeInAnimation","keyframes","GenreContainer","genreList","Genres","leftEL","useRef","rightEl","genreEL","show","current","style","left","right","visibility","ref","map","g","onClick","setShow","Header","header","NavButton","button","Navigation","useState","showGenres","setShowGenres","useEffect","showGenresFromHome","Body","theather","BodyOverlay","Title","SubTitle","StartButton","Home","GET_MOVIE","gql","Column","h1","Subtitle","h4","Description","p","Poster","bg","Detail","id","useParams","useQuery","variables","parseInt","loading","data","movie","title","language","rating","description_intro","medium_cover_image","Movie","GET_MOVIES","Loading","LoadingGifBox","loadingGif","Movies","MovieList","genreId","console","log","limit","genre","movies","m","App","exact","path","component","cashe","InMemoryCache","client","ApolloClient","cache","uri","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"4PAIMA,EAAYC,IAAOC,IAAV,ySAsBAC,EAVD,SAACC,GACb,OACE,cAAC,IAAD,CAAMC,GAAE,iBAAYD,EAAME,WAA1B,SACE,cAACN,EAAD,UACGI,EAAME,eCpBA,MAA0B,mCCA1B,MAA0B,oCCOnCC,EAAcN,IAAOC,IAAV,oOAOSM,GAKpBC,EAAeR,IAAOC,IAAV,qOAOQQ,GAKpBC,EAAkBC,YAAH,4EAKfC,EAAiBZ,IAAOC,IAAV,4TAYLS,GAITG,EAAY,CAChB,SACA,SACA,SACA,UACA,SACA,WACA,QACA,UACA,QACA,YACA,YACA,WAmCaC,EAhCA,SAACX,GACd,IAAMY,EAASC,iBAAO,MAChBC,EAAUD,iBAAO,MACjBE,EAAUF,iBAAO,MAcvB,OAZmB,IAAfb,EAAMgB,OACRJ,EAAOK,QAAQC,MAAMC,KAAO,MAC5BL,EAAQG,QAAQC,MAAME,MAAQ,MAC9BL,EAAQE,QAAQC,MAAMG,WAAa,YAGlB,IAAfrB,EAAMgB,OACRJ,EAAOK,QAAQC,MAAMC,KAAO,QAC5BL,EAAQG,QAAQC,MAAME,MAAQ,QAC9BL,EAAQE,QAAQC,MAAMG,WAAa,UAInC,qCACE,cAAClB,EAAD,CAAamB,IAAKV,IAClB,cAACP,EAAD,CAAciB,IAAKR,IACnB,cAACL,EAAD,CAAgBa,IAAKP,EAArB,SACGL,EAAUa,KAAI,SAACC,GAAD,OACb,qBAAcC,QAAS,kBAAIzB,EAAM0B,SAAQ,IAAzC,SACE,cAAC,EAAD,CAAOxB,UAAWsB,KADVA,YCpFdG,EAAS9B,IAAO+B,OAAV,0OAaNC,EAAYhC,IAAOiC,OAAV,0KAyBEC,EAfE,SAAC/B,GAChB,MAAoCgC,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAIE,OAHFC,qBAAU,WACLnC,EAAMoC,oBAAoBF,GAAc,KAC1C,CAAClC,EAAMoC,qBAEJ,eAACT,EAAD,WACE,cAAC,IAAD,CAAM1B,GAAE,IAAR,SAAe,cAAC4B,EAAD,qBACf,cAACA,EAAD,CAAWJ,QAAS,kBAAKS,GAAc,IAAvC,oBACA,cAACL,EAAD,oBACA,cAAC,EAAD,CAAQb,KAAQiB,EAAYP,QAAWQ,QCvCpC,OAA0B,qCCMnCtC,GAAYC,IAAOC,IAAV,+KAUTuC,GAAOxC,IAAOC,IAAV,2KACgBwC,IAQpBC,GAAc1C,IAAOC,IAAV,qPAWX0C,GAAQ3C,IAAOC,IAAV,iEAKL2C,GAAW5C,IAAOC,IAAV,kFAMR4C,GAAc7C,IAAOiC,OAAV,+NA6BFa,GAhBF,WACX,MAAoCX,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACE,OACE,eAAC,GAAD,WACE,cAAC,EAAD,CAAYE,mBAAsBH,IAClC,cAACI,GAAD,UACE,eAACE,GAAD,WACE,cAACC,GAAD,2CACA,cAACC,GAAD,uEACA,cAACC,GAAD,CAAajB,QAAS,kBAAKS,GAAc,IAAzC,qC,kBC/DNU,GAAYC,aAAH,qMAaTjD,GAAYC,IAAOC,IAAV,yLAUTgD,GAASjD,IAAOC,IAAV,iEAKN0C,GAAQ3C,IAAOkD,GAAV,wEAKLC,GAAWnD,IAAOoD,GAAV,wEAKRC,GAAcrD,IAAOsD,EAAV,gDAIXC,GAASvD,IAAOC,IAAV,8LAIc,SAACE,GAAD,OAAWA,EAAMqD,MA4B5BC,GAvBA,WAAO,IAAD,QACXC,EAAOC,cAAPD,GACR,EAA0BE,aAASb,GAAW,CAC5Cc,UAAW,CAAEH,GAAII,SAASJ,MADpBK,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAGjB,OACE,eAAC,GAAD,WACE,eAACf,GAAD,WACE,cAAC,GAAD,UAAQc,EAAU,aAAeC,EAAKC,MAAMC,SAC1CH,GACA,qCACE,eAACZ,GAAD,kBACGa,QADH,IACGA,GADH,UACGA,EAAMC,aADT,aACG,EAAaE,SADhB,gBAC6BH,QAD7B,IAC6BA,GAD7B,UAC6BA,EAAMC,aADnC,aAC6B,EAAaG,UAE1C,cAACf,GAAD,iBAAcW,QAAd,IAAcA,GAAd,UAAcA,EAAMC,aAApB,aAAc,EAAaI,0BAIjC,cAACd,GAAD,CAAQC,GAAE,OAAEQ,QAAF,IAAEA,GAAF,UAAEA,EAAMC,aAAR,aAAE,EAAaK,yBCvEzBvE,GAAYC,IAAOC,IAAV,8MASTsD,GAASvD,IAAOC,IAAV,uJACc,SAACE,GAAD,OAAWA,EAAMqD,MAiB5Be,GAVD,SAAC,GAAgB,IAAdb,EAAa,EAAbA,GAAIF,EAAS,EAATA,GACnB,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAMpD,GAAE,kBAAasD,GAArB,SACE,cAAC,GAAD,CAAQF,GAAIA,SCzBL,OAA0B,oCCUnCgB,GAAaxB,aAAH,2KAQVjD,GAAYC,IAAOC,IAAV,6IAOT6B,GAAS9B,IAAO+B,OAAV,6MAUNY,GAAQ3C,IAAOkD,GAAV,6FAMLuB,GAAUzE,IAAOC,IAAV,4KAUPyE,GAAgB1E,IAAOC,IAAV,gPAKC0E,IAOdC,GAAS5E,IAAOC,IAAV,6MAmCG4E,GAxBG,WAAO,IAAD,EACZC,EAAYnB,cAAZmB,QACRC,QAAQC,IAAIF,GACZ,MAA0BlB,aAASY,GAAY,CAC7CX,UAAW,CAAEoB,MAAO,GAAIC,MAAOJ,KADzBf,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAIjB,OADAe,QAAQC,IAAIhB,GAEV,eAAC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,UAAQc,MAETf,GAAW,cAACU,GAAD,UAAS,cAACC,GAAD,2BAErB,cAACE,GAAD,iBACGZ,QADH,IACGA,GADH,UACGA,EAAMmB,cADT,aACG,EAAczD,KAAI,SAAA0D,GAAC,OAClB,cAAC,GAAD,CAAkB1B,GAAI0B,EAAE1B,GAAIF,GAAI4B,EAAEd,oBAAtBc,EAAE1B,aC1EX2B,OAVf,WACE,OACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1C,KACjC,cAAC,IAAD,CAAOyC,KAAK,cAAcC,UAAW/B,KACrC,cAAC,IAAD,CAAO8B,KAAK,kBAAkBC,UAAWX,S,2BCV3CY,GAAQ,IAAIC,KAOHC,GALA,IAAIC,KAAa,CAC5BC,MAAOJ,GACPK,IAAK,oCCATC,IAASC,OACP,cAACC,GAAA,EAAD,CAAgBN,OAAQA,GAAxB,SACE,cAAC,GAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.11f54355.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #111111;\r\n  color: white;\r\n  margin: 10px;\r\n  height: 100px;\r\n  width: 200px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  border-radius: 7px;\r\n`;\r\nconst Genre = (props) => {\r\n  return (\r\n    <Link to={`/genre/${props.genreName}`}>\r\n      <Container>\r\n        {props.genreName}\r\n      </Container>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n","export default __webpack_public_path__ + \"static/media/left_c.fdf1653c.jpg\";","export default __webpack_public_path__ + \"static/media/right_c.40e5dcc3.jpg\";","import React, { useRef } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport Genre from \"./Genre\";\r\n\r\nimport left_c from \"../assets/left_c.jpg\";\r\nimport right_c from \"../assets/right_c.jpg\";\r\n\r\nconst LeftCurtain = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: -50vw;\r\n  width: 50vw;\r\n  height: 100vh;\r\n  background-size: cover;\r\n  background-image: url(${left_c});\r\n  background-repeat: no-repeat;\r\n  transition: 0.7s ease;\r\n`;\r\n\r\nconst RightCurtain = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: -50vw;\r\n  width: 50vw;\r\n  height: 100vh;\r\n  background-size: cover;\r\n  background-image: url(${right_c});\r\n  background-repeat: no-repeat;\r\n  transition: 0.7s ease;\r\n`;\r\n\r\nconst fadeInAnimation = keyframes`\r\n  from { opacity: 0; }\r\n  to   { opacity: 1; }\r\n`;\r\n\r\nconst GenreContainer = styled.div`\r\n  visibility: hidden;\r\n  position: absolute;\r\n  height: 60vh;\r\n  min-width: 660px;\r\n  max-width: 1000px;\r\n  margin: 20vh 0;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  /* transition: 2s ease; */\r\n  animation: ${fadeInAnimation} 6s;\r\n  /* height: 50%; */\r\n`;\r\n\r\nconst genreList = [\r\n  \"COMEDY\",\r\n  \"SCI-FI\",\r\n  \"HORROR\",\r\n  \"ROMANCE\",\r\n  \"ACTION\",\r\n  \"THRILLER\",\r\n  \"DRAMA\",\r\n  \"MYSTERY\",\r\n  \"CRIME\",\r\n  \"ANIMATION\",\r\n  \"ADVENTURE\",\r\n  \"FANTASY\",\r\n];\r\n\r\nconst Genres = (props) => {\r\n  const leftEL = useRef(null);\r\n  const rightEl = useRef(null);\r\n  const genreEL = useRef(null);\r\n\r\n  if (props.show === true) {\r\n    leftEL.current.style.left = \"0px\";\r\n    rightEl.current.style.right = \"0px\";\r\n    genreEL.current.style.visibility = \"visible\";\r\n  }\r\n\r\n  if (props.show === false) {\r\n    leftEL.current.style.left = \"-50vw\";\r\n    rightEl.current.style.right = \"-50vw\";\r\n    genreEL.current.style.visibility = \"hidden\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LeftCurtain ref={leftEL} />\r\n      <RightCurtain ref={rightEl} />\r\n      <GenreContainer ref={genreEL}>\r\n        {genreList.map((g) => (\r\n          <div key={g}  onClick={()=>props.setShow(false)}>\r\n            <Genre genreName={g} />\r\n          </div>\r\n        ))}\r\n      </GenreContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import React, { useState, useEffect  } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Genres from \"./Genres\";\r\n\r\nconst Header = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  background-color:\trgb(17,17,17, 0.9);\r\n  height: 5vh;\r\n  color: white;\r\n  z-index: 1;\r\n  text-align: center;\r\n`;\r\n\r\nconst NavButton = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: white;\r\n  cursor: pointer;\r\n  margin: 0 20px;\r\n  height: 100%;\r\n`;\r\n\r\nconst Navigation = (props) => {\r\n    const [showGenres, setShowGenres] = useState(null);\r\n    useEffect(() => {\r\n      if(props.showGenresFromHome) setShowGenres(true)\r\n    }, [props.showGenresFromHome]);\r\n      return (\r\n          <Header>\r\n            <Link to={`/`}><NavButton>HOME</NavButton></Link>\r\n            <NavButton onClick={()=> setShowGenres(true)}>GENRES</NavButton>\r\n            <NavButton>ABOUT</NavButton>\r\n            <Genres show = {showGenres} setShow = {setShowGenres}/>\r\n          </Header>\r\n      );\r\n  }\r\n  \r\n  export default Navigation","export default __webpack_public_path__ + \"static/media/theather.81741049.jpg\";","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navigation from \"../components/Navigation\";\r\n\r\nimport theather from \"../assets/theather.jpg\"\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin: auto;\r\n  height: 100vh;\r\n  background-color: grey;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  background-image: url(${theather});\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-top: 5vh;\r\n  height: 100vh;\r\n  width: 100%;\r\n`;\r\n\r\nconst BodyOverlay = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgb(17,17,17, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  color: white;\r\n  font-size: 50px;\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  color: white;\r\n  font-size: 30px;\r\n  padding: 5vh;\r\n`;\r\n\r\nconst StartButton = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 10px;\r\n  font-size: 20px;\r\n  width: 200px;\r\n  height: 70px;\r\n  background-color: red;\r\n  color: white;\r\n  cursor: pointer;\r\n  margin: 0 20px;\r\n`;\r\n\r\nconst Home = () => {\r\n  const [showGenres, setShowGenres] = useState(null);\r\n    return (\r\n      <Container>\r\n        <Navigation showGenresFromHome = {showGenres}/>\r\n        <Body>\r\n          <BodyOverlay>\r\n            <Title>Not Sure What to Watch Next?</Title>\r\n            <SubTitle>Choose genres, get recomendation and and watch trailors.</SubTitle>\r\n            <StartButton onClick={()=> setShowGenres(true)}>{`Get Started >>`}</StartButton>\r\n          </BodyOverlay>\r\n        </Body>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GET_MOVIE = gql`\r\n  query getMovie($id: Int!) {\r\n    movie(id: $id) {\r\n      id\r\n      title\r\n      language\r\n      rating\r\n      medium_cover_image\r\n      description_intro\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  background-color: #111111;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  color: white;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  margin-left: 10px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 65px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Subtitle = styled.h4`\r\n  font-size: 35px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 28px;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  width: 25%;\r\n  height: 60%;\r\n  background-color: transparent;\r\n  background-image: url(${(props) => props.bg});\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\n\r\nconst Detail = () => {\r\n  const { id } = useParams();\r\n  const { loading, data } = useQuery(GET_MOVIE, {\r\n    variables: { id: parseInt(id) },\r\n  });\r\n  return (\r\n    <Container>\r\n      <Column>\r\n        <Title>{loading ? \"Loading...\" : data.movie.title}</Title>\r\n        {!loading && (\r\n          <>\r\n            <Subtitle>\r\n              {data?.movie?.language} · {data?.movie?.rating}\r\n            </Subtitle>\r\n            <Description>{data?.movie?.description_intro}</Description>\r\n          </>\r\n        )}\r\n      </Column>\r\n      <Poster bg={data?.movie?.medium_cover_image}></Poster>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 400px;\r\n  width: 250px;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  overflow: hidden;\r\n  border-radius: 7px;\r\n  margin: 15px 10px;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  height: 100%;\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nconst Movie = ({ id, bg }) => {\r\n  return (\r\n    <Container>\r\n      <Link to={`/detail/${id}`}>\r\n        <Poster bg={bg} />\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","export default __webpack_public_path__ + \"static/media/loading.acbd807c.gif\";","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"../components/Movie\";\r\nimport Navigation from \"../components/Navigation\";\r\n\r\nimport loadingGif from \"../assets/loading.gif\"\r\n\r\nconst GET_MOVIES = gql`\r\n  query getMovie($limit: Int!, $genre: String!) {\r\n    movies(limit: $limit, genre: $genre) {\r\n      id\r\n      medium_cover_image\r\n    }\r\n  }\r\n`\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: black;\r\n`;\r\nconst Header = styled.header`\r\n  background-color: #111111;\r\n  height: 45vh;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\nconst Title = styled.h1`\r\n  font-size: 60px;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  background-color: black;\r\n  color: white;\r\n  font-size: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst LoadingGifBox = styled.div`\r\n  position: relative;\r\n  top: -250px;\r\n  height: 500px;\r\n  width: 200px;\r\n  background: url(${loadingGif}) no-repeat;\r\n  background-position: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst Movies = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  min-width: 560px;\r\n  max-width: 1100px;\r\n  position: relative;\r\n  top: -50px;\r\n`;\r\n\r\nconst MovieList = () => {\r\n    const { genreId } = useParams();\r\n    console.log(genreId)\r\n    const { loading, data } = useQuery(GET_MOVIES, {\r\n      variables: { limit: 48, genre: genreId },\r\n    });\r\n    console.log(data);\r\n    return (\r\n      <Container>\r\n        <Navigation/>\r\n        <Header>\r\n          <Title>{genreId}</Title>\r\n        </Header>\r\n        {loading && <Loading><LoadingGifBox>...Loading</LoadingGifBox></Loading>}\r\n\r\n        <Movies>\r\n          {data?.movies?.map(m => (\r\n            <Movie key={m.id} id={m.id} bg={m.medium_cover_image} />\r\n          ))}\r\n        </Movies>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default MovieList","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Detail from \"../routes/Detail\";\r\nimport MovieList from \"../routes/MovieList\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Route exact path=\"/\" component={Home}/>\r\n        <Route path=\"/detail/:id\" component={Detail}/>\r\n        <Route path=\"/genre/:genreId\" component={MovieList}/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n\r\nconst cashe = new InMemoryCache();\r\n\r\nconst client = new ApolloClient({\r\n    cache: cashe,\r\n    uri: \"https://movie-ql.herokuapp.com/\"\r\n})\r\n\r\nexport default client","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport client from \"./apollo\";\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}